name: CI

on:
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.15.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest]
        env:
          - TAGS=""
          - TAGS="-tags bounds"
          - TAGS="-tags noasm"
          - TAGS="-tags safe"
          - FORCE_GOARCH=386
        exclude:
          - platform: macos-latest
            env: TAGS="-tags bounds"
          - platform: macos-latest
            env: TAGS="-tags noasm"
          - platform: macos-latest
            env: TAGS="-tags safe"
          - platform: macos-latest
            env: FORCE_GOARCH=386

    runs-on: ${{ matrix.platform }}
    env:
        GO111MODULE: on
        GOPATH: ${{ github.workspace }}
    defaults:
        run:
            working-directory: ${{ env.GOPATH }}/src/gonum.org/v1/gonum

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache-Go
      uses: actions/cache@v1
      with:
        path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)

        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
          path: ${{ env.GOPATH }}/src/gonum.org/v1/gonum

    - name: Check copyrights+imports+formatting+generate
      if: matrix.platform == 'ubuntu-latest' && matrix.tags == ''
      run: |
        ./.travis/script.d/deps.sh
        ./.travis/script.d/check-copyright.sh
        ./.travis/script.d/check-imports.sh
        ./.travis/script.d/check-formatting.sh
        ./.travis/script.d/check-generate.sh

    - name: Test
      run: |
        ./.travis/script.d/test.sh

    - name: Coverage
      if: matrix.platform == 'ubuntu-latest'
      run: |
        ./.github/workflows/test-coverage.sh

    - name: Upload-Coverage
      if: matrix.platform == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
