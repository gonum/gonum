// Copyright ©2017 The gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package mathext

import (
	"math"
)

// CompleteK computes the complete elliptic integral of the 1st kind, 0≤m≤1:
//
//	K(m) = ∫dθ/√(1-m∙sin²(θ)), θ from 0 to π/2.
//
// See: Toshio Fukushima, Precise and fast computation of complete elliptic integrals by
// piecewise minimax rational function approximation,
// Journal of Computational and Applied Mathematics, Volume 282, 2015, Pages 71-76.
//
// DOI: http://dx.doi.org/10.1016/j.cam.2014.12.038
func CompleteK(m float64) float64 {
	if !(0 <= m && m <= 1) {
		return math.NaN()
	}

	var mc, p, q, t float64
	mc = 1 - m

	if mc > 0.592990e0 {
		t = 2.45694208987494165e0*mc - 1.45694208987494165e0
		p = (3703.75266375099019e0 + t*(5462.47093231923466e0+t*(2744.82029097576810e0+t*(543.839017382099411e0+t*(36.2381612593459565e0+t*0.393188651542789784e0)))))
		q = (2077.94377067058435e0 + t*(3398.00069767755460e0+t*(1959.05960044399275e0+t*(472.794455487539279e0+t*(43.5464368440078942e0+t)))))
		return p / q
	}
	if mc > 0.350756e0 {
		t = 4.12823963605439369e0*mc - 1.44800482178389491e0
		p = (4264.28203103974630e0 + t*(6341.90978213264024e0+t*(3214.59187442783167e0+t*(642.790566685354573e0+t*(43.2589626155454993e0+t*0.475223892294445943e0)))))
		q = (2125.06914237062279e0 + t*(3479.95663350926514e0+t*(2006.03187933518870e0+t*(482.900172581418890e0+t*(44.1848041560412224e0+t)))))
		return p / q
	}
	if mc > 0.206924e0 {
		t = 6.95255575949719117e0*mc - 1.43865064797819679e0
		p = (4870.25402224986382e0 + t*(7307.18826377416591e0+t*(3738.29369283392307e0+t*(754.928587580583704e0+t*(51.3609902253065926e0+t*0.571948962277566451e0)))))
		q = (2172.51745704102287e0 + t*(3565.04737778032566e0+t*(2056.13612019430497e0+t*(493.962405117599400e0+t*(44.9026847057686146e0+t)))))
		return p / q
	}
	if mc > 0.121734e0 {
		t = 11.7384669562155183e0*mc - 1.42897053644793990e0
		p = (5514.8512729127464e0 + t*(8350.4595896779631e0+t*(4313.60788246750934e0+t*(880.27903031894216e0+t*(60.598720224393536e0+t*0.68504458747933773e0)))))
		q = (2218.41682813309737e0 + t*(3650.41829123846319e0+t*(2107.97379949034285e0+t*(505.74295207655096e0+t*(45.6911096775045314e0+t)))))
		return p / q
	}
	if mc > 0.071412e0 {
		t = 19.8720241643813839e0*mc - 1.41910098962680339e0
		p = (6188.8743957372448e0 + t*(9459.3331440432847e0+t*(4935.41351498551527e0+t*(1018.21910476032105e0+t*(70.981049144472361e0+t*0.81599895108245948e0)))))
		q = (2260.73112539748448e0 + t*(3732.66955095581621e0+t*(2159.68721749761492e0+t*(517.86964191812384e0+t*(46.5298955058476510e0+t)))))
		return p / q
	}
	if mc > 0.041770e0 {
		t = 33.7359152553808785e0*mc - 1.40914918021725929e0
		p = (6879.5170681289562e0 + t*(10615.0836403687221e0+t*(5594.8381504799829e0+t*(1167.26108955935542e0+t*(82.452856129147838e0+t*0.96592719058503951e0)))))
		q = (2296.88303450660439e0 + t*(3807.37745652028212e0+t*(2208.74949754945558e0+t*(529.79651353072921e0+t*(47.3844470709989137e0+t)))))
		return p / q
	}
	if mc > 0.024360e0 {
		t = 57.4382538770821367e0*mc - 1.39919586444572085e0
		p = (7570.6827538712100e0 + t*(11792.9392624454532e0+t*(6279.2661370014890e0+t*(1325.01058966228180e0+t*(94.886883830605940e0+t*1.13537029594409690e0)))))
		q = (2324.04824540459984e0 + t*(3869.56755306385732e0+t*(2252.22250562615338e0+t*(540.85752251676412e0+t*(48.2089280211559345e0+t)))))
		return p / q
	}
	if mc > 0.014165e0 {
		t = 98.0872976949485042e0*mc - 1.38940657184894556e0
		p = (8247.2601660137746e0 + t*(12967.7060124572914e0+t*(6974.7495213178613e0+t*(1488.54008220335966e0+t*(108.098282908839979e0+t*1.32411616748380686e0)))))
		q = (2340.47337508405427e0 + t*(3915.63324533769906e0+t*(2287.70677154700516e0+t*(550.45072377717361e0+t*(48.9575432570382154e0+t)))))
		return p / q
	}
	if mc > 0.008213e0 {
		t = 168.010752688172043e0*mc - 1.37987231182795699e0
		p = (8894.2961573611293e0 + t*(14113.7038749808951e0+t*(7666.5611739483371e0+t*(1654.60731579994159e0+t*(121.863474964652041e0+t*1.53112170837206117e0)))))
		q = (2344.88618943372377e0 + t*(3942.81065054556536e0+t*(2313.28396270968662e0+t*(558.07615380622169e0+t*(49.5906602613891184e0+t)))))
		return p / q
	}
	if mc > 0 {
		t = 1.0e0 - 121.758188238159016e0*mc
		p = -math.Log(mc*0.0625e0) * (34813.4518336350547e0 + t*(235.767716637974271e0+t*0.199792723884069485e0)) / (69483.5736412906324e0 + t*(614.265044703187382e0+t))
		q = -mc * (9382.53386835986099e0 + t*(51.6478985993381223e0+t*0.00410754154682816898e0)) / (37327.7262507318317e0 + t*(408.017247271148538e0+t))
		return p + q
	}

	return math.Inf(1)
}

// CompleteE computes the complete elliptic integral of the 2nd kind, 0≤m≤1:
//
//	E(m) = ∫√(1-m∙sin²(θ))dθ, θ from 0 to π/2.
//
// See: Toshio Fukushima, Precise and fast computation of complete elliptic integrals by
// piecewise minimax rational function approximation,
// Journal of Computational and Applied Mathematics, Volume 282, 2015, Pages 71-76.
//
// DOI: http://dx.doi.org/10.1016/j.cam.2014.12.038
func CompleteE(m float64) float64 {
	if !(0 <= m && m <= 1) {
		return math.NaN()
	}

	var mc, p, q, t float64
	mc = 1 - m

	if mc > 0.566638e0 {
		t = 2.30753965506897236e0*mc - 1.30753965506897236e0
		p = (19702.2363352671642e0 + t*(31904.1559574281609e0+t*(18177.1879313824040e0+t*(4362.94760768571862e0+t*(409.975559128654710e0+t*10.3244775335024885e0)))))
		q = (14241.2135819448616e0 + t*(20909.9899599927367e0+t*(10266.4884503526076e0+t*(1934.86289070792954e0+t*(117.162100771599098e0+t)))))
		return p / q
	}
	if mc > 0.315153e0 {
		t = 3.97638030101198879e0*mc - 1.25316818100483130e0
		p = (16317.0721393008221e0 + t*(26627.8852140835023e0+t*(15129.4009798463159e0+t*(3574.15857605556033e0+t*(326.113727011739428e0+t*7.93163724081373477e0)))))
		q = (13047.1505096551210e0 + t*(19753.5762165922376e0+t*(9964.25173735060361e0+t*(1918.72232033637537e0+t*(117.670514069579649e0+t)))))
		return p / q
	}
	if mc > 0.171355e0 {
		t = 6.95419964116329852e0*mc - 1.19163687951153702e0
		p = (13577.3850240991520e0 + t*(22545.4744699553993e0+t*(12871.9137872656293e0+t*(3000.74575264868572e0+t*(263.964361648520708e0+t*6.08522443139677663e0)))))
		q = (11717.3306408059832e0 + t*(18431.1264424290258e0+t*(9619.40382323874064e0+t*(1904.06010727307491e0+t*(118.690522739531267e0+t)))))
		return p / q
	}
	if mc > 0.090670e0 {
		t = 12.3938774245522712e0*mc - 1.12375286608415443e0
		p = (11307.9485341543712e0 + t*(19328.6173704569489e0+t*(11208.6068472959372e0+t*(2596.54874477084334e0+t*(219.253495956962613e0+t*4.66931143174036616e0)))))
		q = (10307.6837501971393e0 + t*(16982.2450249024383e0+t*(9241.7604666150102e0+t*(1893.41905403040679e0+t*(120.498555754227847e0+t)))))
		return p / q
	}
	if mc > 0.046453e0 {
		t = 22.6157360291290680e0*mc - 1.05056878576113260e0
		p = (9383.1490856819874e0 + t*(16718.9730458676860e0+t*(9977.2498973537718e0+t*(2323.49987246555537e0+t*(188.618148076418837e0+t*3.59313532204509922e0)))))
		q = (8877.1964704758383e0 + t*(15450.0537230364062e0+t*(8840.2771293410661e0+t*(1889.13672102820913e0+t*(123.422125687316355e0+t)))))
		return p / q
	}
	if mc > 0.022912e0 {
		t = 42.4790790535661187e0*mc - 0.973280659275306911e0
		p = (7719.1171817802054e0 + t*(14521.7363804934985e0+t*(9045.3996063894006e0+t*(2149.92068078627829e0+t*(169.386557799782496e0+t*2.78515570453129137e0)))))
		q = (7479.7539074698012e0 + t*(13874.4978011497847e0+t*(8420.3848818926324e0+t*(1892.69753150329759e0+t*(127.802109608726363e0+t)))))
		return p / q
	}
	if mc > 0.010809e0 {
		t = 82.6241427745187144e0*mc - 0.893084359249772784e0
		p = (6261.6095608987273e0 + t*(12593.0874916293982e0+t*(8304.3265605809870e0+t*(2048.68391263416822e0+t*(159.371262600702237e0+t*2.18867046462858104e0)))))
		q = (6156.4532048239501e0 + t*(12283.8373999680518e0+t*(7979.7435857665227e0+t*(1903.60556312663537e0+t*(133.911640385965187e0+t)))))
		return p / q
	}
	if mc > 0.004841e0 {
		t = 167.560321715817694e0*mc - 0.811159517426273458e0
		p = (4978.06146583586728e0 + t*(10831.7178150656694e0+t*(7664.6703673290453e0+t*(1995.66437151562090e0+t*(156.689647694892782e0+t*1.75859085945198570e0)))))
		q = (4935.56743322938333e0 + t*(10694.5510113880077e0+t*(7506.8028283118051e0+t*(1918.38517009740321e0+t*(141.854303920116856e0+t)))))
		return p / q
	}
	if mc > 0 {
		t = 1.e0 - 206.568890725056806e0*mc
		p = -mc * math.Log(mc*0.0625e0) * (41566.6612602868736e0 + t*(154.034981522913482e0+t*0.0618072471798575991e0)) / (165964.442527585615e0 + t*(917.589668642251803e0+t))
		q = (132232.803956682877e0 + t*(353.375480007017643e0-t*1.40105837312528026e0)) / (132393.665743088043e0 + t*(192.112635228732532e0-t))
		return p + q
	}

	return 1
}
